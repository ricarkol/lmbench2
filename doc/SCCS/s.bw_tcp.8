h11807
s 00008/00007/00040
d D 1.2 97/12/01 15:49:32 lm 3 2
c *** empty log message ***
cC
e
s 00047/00000/00000
d D 1.1 94/11/18 01:26:35 lm 2 1
c Initial revision
e
s 00000/00000/00000
d D 1.0 94/11/18 01:26:34 lm 1 0
cHlm.bitmover.com
cPdoc/bw_tcp.8
cR7dc15eaaec14a49e
cZ-08:00
c______________________________________________________________________
e
u
U
f e 0
f b
f x 34
t
lmbench doc checkin
T
I 2
.\" $Id$
D 3
.TH BW_TCP 8 "$Date$" "(c)1994 Larry McVoy" "LMBENCH"
E 3
I 3
.TH BW_TCP 1 "$Date$" "(c)1994 Larry McVoy" "LMBENCH"
E 3
.SH NAME
bw_tcp \- time data movement through TCP/IP sockets
.SH SYNOPSIS
.B bw_tcp
.I -s
.sp .5
.B bw_tcp
.I hostname [transfersize]
.sp .5
.B bw_tcp
.I -hostname
.SH DESCRIPTION
.B bw_tcp
is a client/server program that moves data over a TCP/IP socket.  Nothing is
D 3
done with the data on either side; the data is moved in 48KB chunks.
E 3
I 3
done with the data on either side; the data is moved in 64KB chunks.
E 3
.LP
.B bw_tcp
has three forms of usage: as a server (-s), as a client (bw_tcp localhost), and
as a shutdown (bw_tcp -localhost).
.LP
The default amount of data is 3MB.  The client form may specify a different
amount of data.  Specifications may end with ``k'' or ``m'' to mean
kilobytes (* 1024) or megabytes (* 1024 * 1024).
.SH OUTPUT
D 3
Output format is \f(CB"Socket bandwidth using %s: %0.2f MB/sec\\n", hostname, megabytes_per_second\fP, i.e.,
.sp
E 3
I 3
Output format is
E 3
.ft CB
Socket bandwidth using localhost: 2.32 MB/sec
.ft
.SH MEMORY UTILIZATION
D 3
This benchmark can move up to six times the requested memory per process.
E 3
I 3
This benchmark can move up to six times the requested memory per process
when run through the loopback device.
E 3
There are two processes, the sender and the receiver.
Most Unix
systems implement the read/write system calls as a bcopy from/to kernel space
to/from user space.  Bcopy will use 2-3 times as much memory bandwidth:
there is one read from the source and a write to the destionation.  The
write usually results in a cache line read and then a write back of
the cache line at some later point.  Memory utilization might be reduced
by 1/3 if the processor architecture implemented "load cache line"
and "store cache line" instructions (as well as getcachelinesize).
.SH ACKNOWLEDGEMENT
Funding for the development of
D 3
this tool was provided by Sun Microsystems Computer Corporation.
.SH "SEE ALSO"
E 3
I 3
this tool was provided by Sun Microsystems Computer Corporation 
and Silicon Graphics, Inc.
.SH SEE ALSO
E 3
lmbench(8).
E 2
