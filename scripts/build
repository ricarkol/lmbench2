#!/bin/sh

CC=`../scripts/compiler`
MAKE=`../scripts/make`
OS=`../scripts/os`
TARGET=`../scripts/target`
BINDIR="../bin/${OS}"
CONFIG="../bin/${OS}/`../scripts/config`"

trap 'rm -f /tmp/dummy$$.s /tmp/dummy$$.c /tmp/dummy$$.o /tmp/dummy$$; exit 1' 1 2 15

# check for HP-UX's ANSI compiler
if [ X$CC = "Xcc" ]
then
	echo "main(int ac, char *av[]) { int i; }" > /tmp/dummy$$.c
	${CC} -o /tmp/dummy$$ /tmp/dummy$$.c 1>/dev/null 2>/dev/null || CFLAGS="${CFLAGS} -Ae"
	rm -f /tmp/dummy$$ /tmp/dummy$$.c
fi
	
# check for bcopy (optionally set the SYS5 flag)
echo "#include <string.h>" > /tmp/dummy$$.c
echo "main() { char buf1[256]; char buf2[256]; bcopy(buf1, buf2, 256); }" >> /tmp/dummy$$.c
${CC} -o /tmp/dummy$$ /tmp/dummy$$.c 1>/dev/null 2>/dev/null || CFLAGS="${CFLAGS} -DSYS5"
rm -f /tmp/dummy$$ /tmp/dummy$$.c

# check for valloc
echo "#include <stdlib.h>" > /tmp/dummy$$.c
echo "main() { char* buf = valloc(123); }" >> /tmp/dummy$$.c
${CC} -o /tmp/dummy$$ /tmp/dummy$$.c 1>/dev/null 2>/dev/null || CFLAGS="${CFLAGS} -Dvalloc=malloc"
rm -f /tmp/dummy$$ /tmp/dummy$$.c

# check for getrusage
echo "#include <sys/types.h>" > /tmp/dummy$$.c
echo "#include <sys/time.h>" >> /tmp/dummy$$.c
echo "#include <sys/resource.h>" >> /tmp/dummy$$.c
echo "#ifndef RUSAGE_SELF" >> /tmp/dummy$$.c
echo "#define RUSAGE_SELF 0" >> /tmp/dummy$$.c
echo "#endif /* RUSAGE_SELF */" >> /tmp/dummy$$.c
echo "main() { struct rusage ru; getrusage(RUSAGE_SELF, &ru); }" >> /tmp/dummy$$.c
${CC} -o /tmp/dummy$$ /tmp/dummy$$.c 1>/dev/null 2>/dev/null && CFLAGS="${CFLAGS} -DRUSAGE"
rm -f /tmp/dummy$$ /tmp/dummy$$.c

# check for -lnsl
echo "extern int pmap_getport(); main() { pmap_getport(); }" > /tmp/dummy$$.c
if ${CC} -o /tmp/dummy$$ /tmp/dummy$$.c 1>/dev/null 2>/dev/null; then
	true;
else
	${CC} -o /tmp/dummy$$ /tmp/dummy$$.c -lnsl 1>/dev/null 2>/dev/null && LDLIBS="${LDLIBS} -lnsl"
fi
rm -f /tmp/dummy$$ /tmp/dummy$$.c


# check for -lsocket
echo "extern void* getservent(); main() { getservent(); }" > /tmp/dummy$$.c
if ${CC} -o /tmp/dummy$$ /tmp/dummy$$.c 1>/dev/null 2>/dev/null; then
	true;
else
	${CC} -o /tmp/dummy$$ /tmp/dummy$$.c -lsocket 1>/dev/null 2>/dev/null && LDLIBS="${LDLIBS} -lsocket"
fi
rm -f /tmp/dummy$$ /tmp/dummy$$.c


# echo Building for $(TARGET)
if [ ! -d ${BINDIR} ]; then mkdir -p ${BINDIR}; fi

# now go ahead and build everything!
${MAKE} CC="${CC}" CFLAGS="${CFLAGS}" LDLIBS="${LDLIBS}" O="${BINDIR}" $*
